<script type="text/javascript">
    (function() {
        const sections = document.querySelectorAll(".ia-toc-section-wrapper");

        if(sections && sections.length > 1) {

            let tocHtml = "";

            if(sections && sections.length > 0) {
                for (let i = 0; i < sections.length; i++) {
                    tocHtml += '<li class="usa-sidenav__item"><a href="#' + sections[i].id + '">' + sections[i].getElementsByClassName('call-out')[0].textContent + '</a></li>';
                }
            }

            // Add html markup to ToC Element
            document.getElementById('table-of-contents').innerHTML = tocHtml;

            //If not on a phone
            if (!(/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent))) {
                document.getElementById('toc-container').classList.add('position-sticky', 'top-0');

                // Necessary to get the correct top of each section, offsetTop is not sufficient in and of itself
                const getOffsetTop = element => {
                    let offsetTop = 0;
                    while(element) {
                        offsetTop += element.offsetTop;
                        element = element.offsetParent;
                    }
                    return offsetTop;
                }

                // grab the sections (targets) and menu_links (triggers)
                // for menu items to apply active link styles to
                const menu_links = document.querySelectorAll('#table-of-contents .usa-sidenav__item a');

                // functions to add and remove the active class from links as appropriate
                const makeActive = (link) => menu_links[link].classList.add("usa-current");
                const removeActive = (link) => menu_links[link].classList.remove("usa-current");
                const removeAllActive = () => [...Array(sections.length).keys()].forEach((link) => removeActive(link));
                const sectionMargin = 100;

                let currentActive = 0;

                // listen for scroll events
                window.addEventListener("scroll", () => {

                    const current = sections.length - [...sections].reverse().findIndex((section) => window.scrollY >= getOffsetTop(section) - sectionMargin ) - 1;

                    if (current !== currentActive) {
                        removeAllActive();
                        currentActive = current;
                        makeActive(current);
                    }
                }); // scroll event listener
            } // end if not on a phone
        } // end if sections are more than 1
    })();
</script>