{#
/**
 * @file
 * Default theme implementation to display a Hero paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{%
    set classes = [
    'paragraph',
    'paragraph--type--' ~ paragraph.bundle|clean_class,
    view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
    not paragraph.isPublished() ? 'paragraph--unpublished',
    'padding-y-7',
    'border-top',
    'border-base-lighter',
    'bgimg-1'
]
%}

{% block paragraph %}
    <section {{ attributes.addClass(classes) }}>
        <div class="grid-container">
            <div class="grid-row grid-gap-4 text-white font-serif-lg">
                <div class="grid-col-auto">
                    <div class="bg-primary-dark padding-2 text-white">
                        <h1 class="text-white font-serif-lg tablet:font-serif-2xl">{{ page_title }}</h1>
                        {% if content.field_infosec_subtitle %}
                            <h3 class="padding-top-2 text-white">{{ content.field_infosec_subtitle }}</h3>
                        {% endif %}
                    </div>
                </div>
            </div>
        </div>

        {%
            set header_bg_img = content.field_banner_image.0['#media'].field_media_image.entity.uri.value|default('https://www.bia.gov/sites/bia.gov/files/heroBG.jpg')
        %}

        <style>
            .bgimg-1 {
                background-image: url("{{ file_url(header_bg_img) }}");
                background-attachment: fixed;
                background-position: center;
                background-repeat: no-repeat;
                background-size: cover;
            }

            @media (max-width: 64em) {
                .bgimg-1 {
                    background-attachment: initial;
                }
            }
        </style>
    </section>
{% endblock paragraph %}
